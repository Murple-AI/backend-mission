name: Copy PR to Private Repo and Create PR

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  copy_code:
    runs-on: ubuntu-latest
    steps:
      - name: Extract PR Info
        id: pr_info
        run: |
          echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR Code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_BRANCH }}
          fetch-depth: 0

      - name: Extract PR Author Email
        run: |
          PR_COMMIT_SHA=$(git rev-list --max-parents=0 HEAD)  # PR의 첫 번째 커밋 SHA 찾기
          PR_AUTHOR_EMAIL=$(git show -s --format='%ae' $PR_COMMIT_SHA || echo "unknown@example.com")
          echo "PR_AUTHOR_EMAIL=$PR_AUTHOR_EMAIL" >> $GITHUB_ENV

      - name: Add Private Repo source
        run: |
          git remote add submit https://x-access-token:${{ secrets.REVIEW_REPO_PAT }}@github.com/Murple-AI/backend-mission-submit.git
          git config user.email ${{ env.PR_AUTHOR_EMAIL }}
          git config user.name ${{ env.PR_AUTHOR }}

          NEW_BRANCH="review/${{ env.PR_AUTHOR }}-${{ env.PR_BRANCH }}-${{ env.SHORT_SHA }}"
          echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV
          
          # 원본 PR 브랜치 내용을 private repo로 push
          git checkout -b $NEW_BRANCH
          git push submit $NEW_BRANCH

      - name: Create PR in Private Repo
        run: |
          gh pr create \
            --repo Murple-AI/backend-mission-submit \
            --base main \
            --head $NEW_BRANCH \
            --title "[Review] ${{ env.PR_TITLE }}" \
            --body-file <(echo "${{ github.event.pull_request.body }} (Original PR: #${{ env.PR_NUMBER }})")
        env:
          GITHUB_TOKEN: ${{ secrets.REVIEW_REPO_PAT }}

      - name: Close and Delete Original PR
        run: |
          gh pr close ${{ env.PR_NUMBER }} -d -c "This PR has been copied to a private repository for review."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

