name: Copy PR to Private Repo and Create PR

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  copy_code:
    runs-on: ubuntu-latest
    permissions:
      checks: read
      statuses: read
      actions: read
      repository-projects: read
      contents: write
      pull-requests: write

    steps:
      - name: Extract PR Info
        id: pr_info
        run: |
          echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # 최근 2개의 커밋을 가져옴
          persist-credentials: false

      - name: Get Commit Author Email
        run: |
          PR_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "Commit Author Email: $PR_AUTHOR_EMAIL"
          echo "PR_AUTHOR_EMAIL=$PR_AUTHOR_EMAIL" >> $GITHUB_ENV

      - name: Add Private Repo source
        run: |
          NEW_BRANCH="review/${{ env.PR_AUTHOR }}-${{ env.PR_BRANCH }}-${{ env.SHORT_SHA }}"
          echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV
          git checkout -b $NEW_BRANCH

          git remote add submit https://x-access-token:${{ secrets.REVIEW_REPO_PAT }}@github.com/Murple-AI/backend-mission-submit.git

          git clone https://x-access-token:${{ secrets.REVIEW_REPO_PAT }}@github.com/Murple-AI/backend-mission-submit.git private-review-repo

          #- name: Debug Git Repository

          git remote -v  # 원격 저장소 목록 확인
          git branch --list  # 브랜치 목록 확인
          # 원본 PR 브랜치 내용을 private repo로 push
          git branch -r
          git push -u submit $NEW_BRANCH --force
        env:
          GITHUB_TOKEN: ${{ secrets.REVIEW_REPO_PAT }}

      - name: Create PR in Private Repo
        run: |
          # 이 작업을 위해서는 미리 두 리포지토리에 공통 커밋이 있어야 함
          # PR대상 브랜치에 타겟 리포지토리의 브랜치 히스토리 추가
          # git remote add target https://github.com/target-org/target-repo.git
          # git fetch target
          # git merge --allow-unrelated-histories target/main
          # git push 

          gh pr create \
            --repo Murple-AI/backend-mission-submit \
            --base main \
            --head $NEW_BRANCH \
            --title "[Review] ${{ env.PR_AUTHOR }} / ${{ env.PR_AUTHOR_EMAIL }} - ${{ env.PR_TITLE }}" \
            --body-file <(echo "${{ github.event.pull_request.body }} (Original PR: #${{ env.PR_NUMBER }})")
        env:
          GITHUB_TOKEN: ${{ secrets.REVIEW_REPO_PAT }}

      - name: Close and Delete Original PR
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git checkout ${{ env.PR_BRANCH }}

          # GraphQL: Resource not accessible by integration (repository.pullRequest.projectCards.nodes)
          # 위와 같은 에러는 보통 권한 문제로 인해 발생
          # permissions 설정을 확인하고, 권한이 없는 경우에는 토큰을 확인
          
          gh pr edit ${{ env.PR_NUMBER }} --base temp-branch
          gh pr edit ${{ env.PR_NUMBER }} --title "[Closed]" --body " " --base temp-branch
          git reset --hard origin/main
          git push origin --force
          gh pr edit ${{ env.PR_NUMBER }} --base main
          gh pr close ${{ env.PR_NUMBER }} --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

